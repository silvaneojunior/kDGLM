% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{forecast_dlm}
\alias{forecast_dlm}
\title{forecast}
\usage{
forecast_dlm(
  model,
  t = 1,
  outcome = NULL,
  offset = NULL,
  FF = NULL,
  G = NULL,
  D = NULL,
  h = NULL,
  H = NULL,
  plot = ifelse(requireNamespace("plotly", quietly = TRUE), "plotly",
    ifelse(requireNamespace("ggplot2", quietly = TRUE), "ggplot2", "base")),
  pred.cred = 0.95
)
}
\arguments{
\item{model}{fitted_dlm: The fitted model to be use for predictions.}

\item{t}{Numeric: Time window for prediction.}

\item{outcome}{List (optional): A named list containing the observed values in the prediction window. Note that the names in the list must be the same as the names passed during the fitting process.}

\item{offset}{Matrix or scalar (optional): offset for predictions. Should have dimensions r x t, where r is the number of outcomes of the model. If offset is not specified, the last value observed by the model will be used.}

\item{FF}{Array (optional): A 3D-array containing the regression matrix for each time. Its dimension should be n x k x t, where n is the number of latent variables, k is the number of linear predictors in the model. If not specified, the last value given to the model will be used.}

\item{G}{Array (optional): A 3D-array containing the evolution matrix for each time. Its dimension should be n x n x t, where n is the number of latent variables. If not specified, the last value given to the model will be used.}

\item{D}{Array (optional): A 3D-array containing the discount factor matrix for each time. Its dimension should be n x n x t, where n is the number of latent variables and t is the time series length. If not specified, the last value given to the model will be used in the first step, and 1 will be use thereafter.}

\item{h}{Matrix (optional): A drift to be add after the temporal evolution (can be interpreted as the mean of the random noise at each time). Its dimension should be n x t, where t is the length of the series and n is the number of latent states.}

\item{H}{Array (optional): A 3D-array containing the covariance matrix of the noise for each time. Its dimension should be n x n x t, where n is the number of latent variables and t is the time series length. If not specified, 0 will be used.}

\item{plot}{Bool or String: A flag indicating if a plot should be produced. Should be one of FALSE, TRUE, 'base', 'ggplot2' or 'plotly'.}

\item{pred.cred}{Numeric: The credibility level for the I.C. intervals.}
}
\value{
A list containing:
\itemize{
   \item data Data.frame: A data frame contain the mean, variance and credibility intervals for the outcomes, including both the observed data and the predictions for future observations.
   \item forecast Data.frame: Same as data, but restricted to predictions for future observations.
   \item outcomes List: A named list containing predictions for each outcome. Each element of this list is a list containing predictions (mean, variance and credibility intervals), the distribution of the linear predictor for the parameter of the observational model and the parameters of the predictive distribution (if available).
   \item mt Matrix: A matrix with the values for the latent states at each time. Dimensions are n x t, where n is the number of latent states
   \item Ct Array: A 3D-array with the covariance of the latent states at each time. Dimensions are n x n x t, where n is the number of linear predictors.
   \item ft Matrix: A matrix with the values for the linear predictors at each time. Dimensions are n x t, where n is the number of linear predictors
   \item Qt Array: A 3D-array with the covariance of the linear predictors at each time. Dimensions are n x n x t, where n is the number of linear predictors.
   \item plot (if so chosen): A plotly or ggplot object.
}
}
\description{
Makes predictions for t times ahead using the fitted model.
}
\examples{
data <- c(AirPassengers)

level <- polynomial_block(rate = 1, order = 2, D = 0.95)
season <- harmonic_block(rate = 1, order = 2, period = 12, D = 0.975)

outcome <- Poisson(lambda = "rate", data)

fitted.data <- fit_model(level, season,
  AirPassengers = outcome
)

# forecast(fitted.data, 20)$plot
# Or
forecast_dlm(fitted.data, 20)$plot

}
\seealso{
Other {auxiliary functions for fitted_dlm objects}: 
\code{\link{coef.fitted_dlm}()},
\code{\link{coefficients.fitted_dlm}()},
\code{\link{dlm_sampling}()},
\code{\link{eval_past}()},
\code{\link{forecast.fitted_dlm}()}
}
\concept{{auxiliary functions for fitted_dlm objects}}

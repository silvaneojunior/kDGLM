% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{fit_model}
\alias{fit_model}
\title{Fitting kDGLM models}
\usage{
fit_model(..., smooth = TRUE, p.monit = NA)
}
\arguments{
\item{...}{dlm_block or dlm_distr objects: The structural blocks of the model (dlm_block objects), alongside the model outcomes (dlm_distr object). All block must be completely defined.}

\item{smooth}{boolean: A flag indicating if the smoothed distribution for the latent states should be calculated.}

\item{p.monit}{numeric (optional): The prior probability of changes in the latent space variables that are not part of its dynamic.}
}
\value{
A fitted_dlm object.
}
\description{
Fit a model given its structure and the observed data. This function can be used for any supported family (see vignette).
}
\details{
This is the main function of the kDGLM package, as it is used to fit all models.

For the details about the implementation see  \insertCite{ArtigoPacote;textual}{kDGLM}.

For the details about the methodology see  \insertCite{ArtigokParametrico;textual}{kDGLM}.

For the details about the Dynamic Linear Models see  \insertCite{WestHarr-DLM;textual}{kDGLM} and \insertCite{Petris-DLM;textual}{kDGLM}.
}
\examples{

# Poisson case
data <- c(AirPassengers)

level <- polynomial_block(rate = 1, order = 2, D = 0.95)
season <- harmonic_block(rate = 1, order = 2, period = 12, D = 0.975)

outcome <- Poisson(lambda = "rate", data = data)

fitted.data <- fit_model(level, season,
  AirPassengers = outcome
)
summary(fitted.data)

plot(fitted.data, plot.pkg = "base")

##################################################################

# Multinomial case
structure <- (
  polynomial_block(p = 1, order = 2, D = 0.95) +
    harmonic_block(p = 1, period = 12, D = 0.975) +
    noise_block(p = 1, R1 = 0.1) +
    regression_block(p = chickenPox$date >= as.Date("2013-09-01"))
  # Vaccine was introduced in September of 2013
) * 4

outcome <- Multinom(p = structure$pred.names, data = chickenPox[, c(2, 3, 4, 6, 5)])
fitted.data <- fit_model(structure, chickenPox = outcome)
summary(fitted.data)
plot(fitted.data, plot.pkg = "base")

##################################################################

# Univariate Normal case
structure <- polynomial_block(mu = 1, D = 0.95) +
  polynomial_block(V = 1, D = 0.95)

outcome <- Normal(mu = "mu", V = "V", data = cornWheat$corn.log.return[1:500])
fitted.data <- fit_model(structure, corn = outcome)
summary(fitted.data)
plot(fitted.data, plot.pkg = "base")

##################################################################

# Bivariate Normal case
structure <- (polynomial_block(mu = 1, D = 0.95) +
  polynomial_block(V = 1, D = 0.95)) * 2 +
  polynomial_block(rho = 1, D = 0.95)

outcome <- Normal(
  mu = c("mu.1", "mu.2"),
  V = matrix(c("V.1", "rho", "rho", "V.2"), 2, 2),
  data = cornWheat[1:500, c(4, 5)]
)
fitted.data <- fit_model(structure, cornWheat = outcome)
summary(fitted.data)
plot(fitted.data, plot.pkg = "base")

##################################################################

# Gamma case
structure <- polynomial_block(mu = 1, D = 0.95)

outcome <- Gamma(phi = 0.5, mu = "mu", data = cornWheat$corn.log.return[1:500]**2)
fitted.data <- fit_model(structure, corn = outcome)
summary(fitted.data)
plot(fitted.data, plot.pkg = "base")

}
\seealso{
auxiliary functions for creating outcomes \code{\link{Poisson}}, \code{\link{Multinom}}, \code{\link{Normal}}, \code{\link{Gamma}}, \code{\link{Dirichlet}}

auxiliary functions for creating structural blocks \code{\link{polynomial_block}}, \code{\link{regression_block}}, \code{\link{harmonic_block}}, \code{\link{AR_block}}

auxiliary functions for defining priors \code{\link{zero_sum_prior}}, \code{\link{CAR_prior}}

auxiliary function for choosing hyper parameters \code{\link{search_model}}.

Other {auxiliary functions for fitted_dlm objects}: 
\code{\link{coef.fitted_dlm}()},
\code{\link{dlm_sampling}()},
\code{\link{eval_dlm_norm_const}()},
\code{\link{forecast.fitted_dlm}()},
\code{\link{search_model}()},
\code{\link{smoothing}()},
\code{\link{update.fitted_dlm}()}
}
\concept{{auxiliary functions for fitted_dlm objects}}
